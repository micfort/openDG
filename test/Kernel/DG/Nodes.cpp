//////////////////////////////////////////////////////////////////////////
// This file is part of openPSTD.                                       //
//                                                                      //
// openPSTD is free software: you can redistribute it and/or modify     //
// it under the terms of the GNU General Public License as published by //
// the Free Software Foundation, either version 3 of the License, or    //
// (at your option) any later version.                                  //
//                                                                      //
// openPSTD is distributed in the hope that it will be useful,          //
// but WITHOUT ANY WARRANTY; without even the implied warranty of       //
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        //
// GNU General Public License for more details.                         //
//                                                                      //
// You should have received a copy of the GNU General Public License    //
// along with openPSTD.  If not, see <http://www.gnu.org/licenses/>.    //
//                                                                      //
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Date: 3-11-2016
//
//
// Authors: M. R. Fortuin
//
//
// Purpose:
//
//
//////////////////////////////////////////////////////////////////////////


#include "Macros.h"

#include <boost/test/unit_test.hpp>
#include <kernel/DG/Nodes.h>
#include <iostream>

using namespace OpenPSTD::Kernel;
using namespace OpenPSTD::Kernel::DG;
using namespace std;
using namespace Eigen;

BOOST_AUTO_TEST_SUITE(DG)
    BOOST_AUTO_TEST_SUITE(Nodes_tests)
        BOOST_AUTO_TEST_CASE(Nodes_1)
        {
            int N = 10;
            ArrayXX<double> expectedResult(2, 66);
            expectedResult <<
                -1,-0.9340014304080595,-0.78448347366314441,-0.56523532699620493,-0.29575813558693947,2.4833256610529142e-16,0.2957581355869392,0.56523532699620505,0.7844834736631443,0.93400143040805927,1,-0.96700071520402975,-0.86249026693428399,-0.67896301160953043,-0.43368036186031661,-0.14906098450496832,0.14906098450496846,0.43368036186031605,0.67896301160953076,0.86249026693428343,0.96700071520402964,-0.89224173683157226,-0.76151385814968486,-0.55399412385107882,-0.29138334065999855,2.0816681711721685e-16,0.29138334065999827,0.5539941238510786,0.76151385814968442,0.89224173683157215,-0.78261766349810258,-0.6352687723553343,-0.41300509393836826,-0.14311390425186113,0.14311390425186121,0.41300509393836826,0.63526877235533474,0.78261766349810236,-0.6478790677934696,-0.49192852310193314,-0.26459778933321609,7.2858385991025898e-17,0.26459778933321609,0.49192852310193319,0.64787906779346971,-0.50000000000000011,-0.34286753859696489,-0.12162175327836972,0.12162175327837008,0.34286753859696473,0.49999999999999989,-0.35212093220653023,-0.2015884104950183,9.7144514654701197e-17,0.20158841049501827,0.3521209322065304,-0.21738233650189748,-0.082550846540153947,0.08255084654015378,0.21738233650189745,-0.10775826316842774,4.7878367936959876e-16,0.1077582631684279,-0.032999284795970238,0.032999284795970397,0,
                -0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.52019383130956998,-0.49795898778794051,-0.48732098446614014,-0.48315971979192329,-0.48196973094029821,-0.4819697309402981,-0.48315971979192301,-0.48732098446614019,-0.49795898778794118,-0.52019383130957009,-0.39070748244653075,-0.34433872405077243,-0.31984865653489114,-0.30866695415658463,-0.30553120979702442,-0.30866695415658485,-0.3198486565348912,-0.34433872405077204,-0.39070748244653075,-0.20083301770030484,-0.1339983505975002,-0.098011898172841228,-0.082626851144590271,-0.082626851144590382,-0.098011898172841477,-0.13399835059750043,-0.20083301770030476,0.032541075800601144,0.11189426617572781,0.15276560489851207,0.16525370228918076,0.15276560489851243,0.11189426617572801,0.03254107580060088,0.2886751345948127,0.37007546476457021,0.40667885232942613,0.40667885232942613,0.37007546476457032,0.28867513459481314,0.54480919338902489,0.61715807038942361,0.63969731306978228,0.61715807038942316,0.54480919338902467,0.77818328688993044,0.83165970851691218,0.83165970851691251,0.77818328688993066,0.96805775163615659,0.9959179755758818,0.96805775163615648,1.0975441004991959,1.0975441004991959,1.1547005383792517;
            expectedResult.transposeInPlace();

            ArrayXX<double> result = Nodes2D<double>(N);

            BOOST_CHECK(result.isApprox(expectedResult, 1e-8));
        }

        BOOST_AUTO_TEST_CASE(Nodes_2)
        {
            int N = 5;
            ArrayXX<double> expectedResult(2, 21);
            expectedResult <<
                -1,-0.76505532392946507,-0.28523151648064521,0.28523151648064515,0.76505532392946463,1,-0.88252766196473242,-0.52670877175286324,-1.0408340855860843e-17,0.5267087717528629,0.88252766196473242,-0.64261575824032258,-0.2431317840018882,0.24313178400188834,0.64261575824032258,-0.35738424175967737,1.1796119636642288e-16,0.35738424175967742,-0.11747233803526745,0.11747233803526778,0,
                -0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.37388221122863619,-0.30409545115605263,-0.28074440188408828,-0.30409545115605269,-0.37388221122863652,0.041657395362614424,0.14037220094204417,0.14037220094204417,0.041657395362614369,0.53569287382701147,0.60819090231210526,0.53569287382701136,0.95123248041826236,0.95123248041826214,1.1547005383792517;
            expectedResult.transposeInPlace();

            ArrayXX<double> result = Nodes2D<double>(N);

            BOOST_CHECK(result.isApprox(expectedResult, 1e-8));
        }

        BOOST_AUTO_TEST_CASE(Nodes_3)
        {
            int N = 16;
            ArrayXX<double> expectedResult(2, 153);
            expectedResult <<
                            -1,-0.97313217663141893,-0.91087999591557367,-0.81569625122177014,-0.69102898062768459,-0.54138539933010144,-0.37217443356547703,-0.18951197351831711,-1.5478956400803505e-16,0.18951197351831761,0.37217443356547725,0.54138539933010155,0.69102898062768447,0.81569625122177025,0.91087999591557356,0.97313217663141838,1,-0.98656608831570924,-0.94308233446836642,-0.86496473963957543,-0.75524073914952727,-0.61797573565758712,-0.45820520232529982,-0.28176239029788119,-0.095072974609040961,0.095072974609040822,0.28176239029788169,0.45820520232529977,0.61797573565758723,0.75524073914952572,0.86496473963957776,0.94308233446836132,0.98656608831570947,-0.95543999795778689,-0.89936400472408673,-0.80866738298763452,-0.68709528558090194,-0.53942621454348427,-0.37134252005806873,-0.18923876176114054,-1.1102230246251565e-16,0.18923876176114082,0.37134252005806867,0.53942621454348416,0.68709528558090194,0.80866738298763452,0.89936400472408518,0.95543999795778678,-0.90784812561088524,-0.84237853847382249,-0.74181499553328512,-0.61074849388064034,-0.4547957494658606,-0.28042680491146355,-0.094747033812665332,0.094747033812665055,0.28042680491146382,0.45479574946586032,0.61074849388064045,0.74181499553328467,0.84237853847382405,0.90784812561088502,-0.84551449031384229,-0.77321331673900096,-0.66508431062000317,-0.52671385239152713,-0.36470821818092014,-0.18648050306520422,-2.4980018054066022e-16,0.18648050306520433,0.36470821818092025,0.52671385239152713,0.66508431062000295,0.77321331673900062,0.84551449031384218,-0.77069269966505083,-0.69361581430484898,-0.57995950075473013,-0.43647604383682409,-0.27092824631580342,-0.091832180778073841,0.09183218077807391,0.27092824631580359,0.4364760438368237,0.57995950075473002,0.69361581430484853,0.77069269966505072,-0.68608721678273865,-0.60591615792176179,-0.48865489216308811,-0.342406836049438,-0.17626397895651991,-5.2041704279304213e-17,0.17626397895652021,0.342406836049438,0.48865489216308783,0.60591615792176146,0.68608721678273854,-0.59475598675915886,-0.51293183000664111,-0.39401772038110727,-0.24765980223677267,-0.084447743250599366,0.084447743250599075,0.24765980223677297,0.39401772038110738,0.51293183000664122,0.59475598675915853,-0.49999999999999994,-0.4178588553976002,-0.29941613040194726,-0.15604923892536016,-9.0205620750793969e-17,0.1560492389253603,0.29941613040194726,0.4178588553976002,0.50000000000000011,-0.40524401324084142,-0.32415376762388032,-0.20861698069666135,-0.071918102925666569,0.071918102925666735,0.20861698069666149,0.3241537676238801,0.40524401324084119,-0.3139127832172614,-0.23541061197954885,-0.12565809607651862,-6.9388939039072284e-17,0.1256580960765189,0.23541061197954921,0.3139127832172614,-0.2293073003349492,-0.15523758108141367,-0.054719709952382817,0.054719709952383254,0.15523758108141367,0.22930730033494928,-0.15448550968615765,-0.087137799324296702,1.3877787807814457e-17,0.087137799324296744,0.15448550968615782,-0.092151874389114832,-0.034399265084509925,0.034399265084508898,0.092151874389114888,-0.044560002042213095,5.467848396278896e-15,0.044560002042213248,-0.013433911684290492,0.013433911684290839,0,
                            -0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.57735026918962584,-0.55408205160804092,-0.54448883967328576,-0.53910847518337757,-0.53665650784390018,-0.536041375785966,-0.53637365729957298,-0.5369761218789515,-0.53739225277733493,-0.53739225277733493,-0.5369761218789515,-0.53637365729957331,-0.53604137578596611,-0.53665650784389918,-0.53910847518337768,-0.54448883967329509,-0.55408205160804136,-0.5001700816671395,-0.4795272003139785,-0.466884331252781,-0.45987952663102949,-0.4565353413658893,-0.45528484384256884,-0.45499301701846673,-0.45497247385503004,-0.45499301701846673,-0.45528484384256884,-0.45653534136588947,-0.45987952663102993,-0.46688433125278095,-0.47952720031397628,-0.50017008166713972,-0.41773854073497363,-0.38572941215447631,-0.36510220881806993,-0.35261580734914638,-0.34562032054789388,-0.342094631504406,-0.34067513245436132,-0.34067513245436143,-0.34209463150440628,-0.34562032054789388,-0.35261580734914616,-0.36510220881806998,-0.38572941215447709,-0.41773854073497352,-0.30977351738002656,-0.26716199810886454,-0.23888913457898744,-0.22105451229667122,-0.21056438794242316,-0.2051764232396924,-0.20353211139796276,-0.2051764232396921,-0.21056438794242294,-0.22105451229667133,-0.23888913457898758,-0.26716199810886432,-0.30977351738002668,-0.1801783744630378,-0.12863051671011144,-0.093949633954335504,-0.07180942120322735,-0.058908641345122803,-0.05301933429249138,-0.053019334292491282,-0.058908641345122532,-0.071809421203227183,-0.093949633954335532,-0.12863051671011166,-0.1801783744630378,-0.033637379511974264,0.024474673110484152,0.063610933443374179,0.088284228012189589,0.10176605569898159,0.10603866858498266,0.1017660556989812,0.088284228012189325,0.063610933443374443,0.024474673110484613,-0.033637379511974111,0.12455295120662606,0.18636051516388522,0.2274862369275151,0.25239090444217199,0.26408506458481495,0.2640850645848149,0.25239090444217183,0.22748623692751493,0.18636051516388513,0.12455295120662646,0.28867513459481303,0.35103173761344991,0.3913820835750923,0.4139040527076332,0.4211287758848461,0.41390405270763364,0.39138208357509258,0.35103173761344975,0.28867513459481281,0.45279731798299933,0.51250144876846693,0.54923447779690426,0.56667483284456521,0.5666748328445651,0.54923447779690437,0.51250144876846737,0.45279731798299971,0.61098764870159994,0.66500417400968459,0.69542447594487689,0.70523161469829254,0.695424475944877,0.6650041740096847,0.61098764870160005,0.75752864365266359,0.80320337389483021,0.82498173544909947,0.82498173544909981,0.80320337389483054,0.75752864365266359,0.88712378656965241,0.92238591999837738,0.93376866250556201,0.9223859199983756,0.88712378656965241,0.99508880992459936,1.0186356754973538,1.018635675497356,0.99508880992459947,1.0775203508567655,1.0889776793465809,1.0775203508567652,1.1314323207976673,1.1314323207976666,1.1547005383792517;
            expectedResult.transposeInPlace();

            ArrayXX<double> result = Nodes2D<double>(N);

            BOOST_CHECK(result.isApprox(expectedResult, 1e-8));
        }

    BOOST_AUTO_TEST_SUITE_END()
BOOST_AUTO_TEST_SUITE_END()